import streamlit as st
import os
from PIL import Image
from dotenv import load_dotenv
from dino_analyzer import DinosaurAnalyzer
from models import DinosaurInfo
from utils import get_image_info, format_file_size

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    st.set_page_config(
        page_title="ü¶ï DINO - –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤",
        page_icon="ü¶ï",
        layout="wide",
        initial_sidebar_state="expanded"
    )
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.title("ü¶ï DINO - –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤")
    st.markdown("### –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ñ–∏–≥—É—Ä–∫–∏ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!")
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        env_api_key = os.getenv('GEMINI_API_KEY')
        has_env_key = env_api_key and env_api_key != "your_api_key_here"
        
        if has_env_key:
            st.success("‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            api_key = env_api_key
            st.info("üí° API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        else:
            st.warning("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            # –í–≤–æ–¥ API –∫–ª—é—á–∞
            api_key = st.text_input(
                "üîë –í–≤–µ–¥–∏—Ç–µ Gemini API Key:",
                type="password",
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á –∑–¥–µ—Å—å...",
                help="–ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://ai.google.dev/"
            )
        
        st.markdown("---")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
        st.markdown("""
        **–û –ø—Ä–æ–µ–∫—Ç–µ DINO:**
        
        –≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ—â–Ω–æ—Å—Ç–∏ Gemini API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä–æ–∫ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:
        
        - üîç **–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∏–¥–∞**
        - üé® **–ê–Ω–∞–ª–∏–∑ —Ü–≤–µ—Ç–æ–≤**
        - ‚è∞ **–ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥**
        - üìö **–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã**
        
        **–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:**
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–µ—Ç–∫–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        - –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –≤–∞–∂–Ω–æ
        - –§–∏–≥—É—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω–∞
        - –ò–∑–±–µ–≥–∞–π—Ç–µ —Å–∏–ª—å–Ω—ã—Ö —Ç–µ–Ω–µ–π
        """)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
    col1, col2 = st.columns([1, 1])
    
    with col1:
        st.header("üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        
        uploaded_file = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–∏–≥—É—Ä–∫–∏ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞",
            type=['png', 'jpg', 'jpeg'],
            help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PNG, JPG, JPEG"
        )
        
        if uploaded_file is not None:
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image = Image.open(uploaded_file)
            st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_container_width=True)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
            file_size = len(uploaded_file.getvalue())
            st.info(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {format_file_size(file_size)}")
            st.info(f"üìê –†–∞–∑–º–µ—Ä—ã: {image.width} √ó {image.height} –ø–∏–∫—Å–µ–ª–µ–π")
            
            # –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
            if st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∏–Ω–æ–∑–∞–≤—Ä–∞", type="primary", use_container_width=True):
                if not api_key:
                    st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á")
                else:
                    analyze_dinosaur(image, api_key, col2)
    
    with col2:
        st.header("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
        st.info("üëÜ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")


def analyze_dinosaur(image: Image.Image, api_key: str, result_column):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
    
    Args:
        image: PIL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        api_key: API –∫–ª—é—á –¥–ª—è Gemini
        result_column: –°—Ç–æ–ª–±–µ—Ü Streamlit –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    """
    with result_column:
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        with st.spinner("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∏–Ω–æ–∑–∞–≤—Ä–∞..."):
            try:
                # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                analyzer = DinosaurAnalyzer(api_key=api_key)
                result = analyzer.analyze_image_from_pil(image)
                
                if result:
                    display_results(result)
                else:
                    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
                    st.info("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ")
                    
            except ValueError as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
                st.info("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
            except Exception as e:
                st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
                st.info("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")


def display_results(info: DinosaurInfo):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
    
    Args:
        info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏–Ω–æ–∑–∞–≤—Ä–µ
    """
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    st.subheader("üìõ –í–∏–¥ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞")
    st.write(f"**{info.species_name}**")
    
    st.subheader("üé® –¶–≤–µ—Ç —Ñ–∏–≥—É—Ä–∫–∏")
    st.write(f"{info.color_description}")
    
    st.subheader("‚è∞ –ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥")
    st.write(f"{info.geological_period}")
    
    # –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –±–ª–æ–∫–µ
    st.subheader("üìö –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç")
    st.info(info.brief_info)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    st.markdown("---")
    st.subheader("üíæ –î–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏")
    
    col_actions1, col_actions2 = st.columns(2)
    
    with col_actions1:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ", use_container_width=True):
            data_text = f"""–í–∏–¥: {info.species_name}
–¶–≤–µ—Ç —Ñ–∏–≥—É—Ä–∫–∏: {info.color_description}
–ü–µ—Ä–∏–æ–¥: {info.geological_period}
–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç: {info.brief_info}"""
            st.text_area("–î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:", data_text, height=150)
    
    with col_actions2:
        json_data = info.model_dump_json(indent=2)
        st.download_button(
            label="üíæ –°–∫–∞—á–∞—Ç—å JSON",
            data=json_data,
            file_name="dinosaur_info.json",
            mime="application/json",
            use_container_width=True
        )
    
    # JSON –¥–∞–Ω–Ω—ã–µ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–µ)
    with st.expander("üîß –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (JSON)"):
        st.json(info.model_dump())


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ñ—É—Ç–µ—Ä–µ
def show_footer():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ñ—É—Ç–µ—Ä —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π."""
    st.markdown("---")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("""
        **üî¨ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
        - Gemini AI API
        - Streamlit
        - Python
        - Pydantic
        """)
    
    with col2:
        st.markdown("""
        **üìä –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
        - –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤–∏–¥–æ–≤
        - –ê–Ω–∞–ª–∏–∑ —Ü–≤–µ—Ç–æ–≤
        - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        - –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç—ã
        """)
    
    with col3:
        st.markdown("""
        **üöÄ –û—Ç–∫—Ä—ã—Ç—ã–π –∫–æ–¥:**
        - GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        - MIT –ª–∏—Ü–µ–Ω–∑–∏—è
        - –í–∫–ª–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è
        - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        """)
    
    st.markdown("""
    <div style='text-align: center; margin-top: 2rem;'>
        <p>ü¶ï <strong>DINO Project</strong> - Image ORM –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤</p>
        <p>Powered by <strong>Gemini API</strong> üöÄ</p>
    </div>
    """, unsafe_allow_html=True)


if __name__ == "__main__":
    main()
    show_footer() 